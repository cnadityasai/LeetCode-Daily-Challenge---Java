class Solution {
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        int distance[][] = new int[n][n];

        for(int i=0; i<n; i++){
            Arrays.fill(distance[i], Integer.MAX_VALUE);
            distance[i][i] = 0;
        }

        for(int edge[]: edges){
            int source = edge[0];
            int destination = edge[1];
            int weight = edge[2];
            distance[source][destination] = weight;
            distance[destination][source] = weight;
        }

        for(int middle=0; middle<n; middle++){
            for(int source=0; source<n; source++){
                for(int destination=0; destination<n; destination++){
                    if(distance[source][middle] < Integer.MAX_VALUE && distance[middle][destination] < Integer.MAX_VALUE){
                        distance[source][destination] = Math.min(distance[source][destination], distance[source][middle] + distance[middle][destination]);
                    }
                }
            }
        }

        int min_num = n;
        int res = -1;

        for(int source=0; source<n; source++){
            int count = 0;
            for(int destination=0; destination<n; destination++){
                if(distance[source][destination] <= distanceThreshold)
                    count++;
            }

            if(count <= min_num){
                min_num = count;
                res = source;
            }
        }

        return res;
    }
}
