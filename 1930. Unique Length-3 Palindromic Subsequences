// Not a very optimal solution - could be better

class Solution {
    public int countPalindromicSubsequence(String s) {
        HashMap<Character, Integer> first = new HashMap<>();
        HashMap<Character, Integer> last = new HashMap<>();
        Set<Character> characters = new HashSet<>();
        int n = s.length();

        for(int i=0; i<n; i++){
            char c = s.charAt(i);
            characters.add(c);
            if(first.containsKey(c)) continue;
            first.put(c, i);
        }

        for(int i=s.length()-1; i>=0; i--){
            char c = s.charAt(i);
            if(last.containsKey(c)) continue;
            last.put(c, i);
        }

        int score = 0;
        for(char c: characters){
            Set<Character> set = new HashSet<>();
            for(int i=first.get(c)+1; i<last.get(c); i++){
                set.add(s.charAt(i));
            }
            score += set.size();
        }

        return score;
    }
}
