// Not optimised solution

class Solution {
    public boolean isAnagram(String s, String t) {
        if(s.length() != t.length())
            return false;
        
        Map<Character, Integer> map = new HashMap<>();

        for(char c: s.toCharArray()){
            map.put(c, map.getOrDefault(c, 0)+1);
        }

        for(char c: t.toCharArray()){
            if(map.containsKey(c)){
                map.put(c, map.get(c)-1);
                if(map.get(c) == 0)
                    map.remove(c);
            } else {
                return false;
            }
        }

        return true;
    }
}

// Optimised Solution

class Solution {
    public boolean isAnagram(String s, String t) {

        if(s.length() != t.length())
            return false;

        int[] count = new int[26];

        for(char c: s.toCharArray()){
            count[c - 'a']++;
        }

        for(char c: t.toCharArray()){
            if(count[c - 'a'] == 0){
                return false;
            } else {
                count[c - 'a'] -= 1;
            }
        }

        return true;
    }
}
